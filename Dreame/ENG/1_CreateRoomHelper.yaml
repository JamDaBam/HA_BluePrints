blueprint:
  name: "🏠 Dreame: Room Helper Creation"
  description: |
    ## 📋 Prerequisites
    - **Vacuum Map Card** configured and working
    - Dreame/Tasshack integration active
    
    ## 🎯 What this blueprint does
    Creates an **intelligent script** that automatically:
    
    ✅ Reads the `rooms` attribute from your robot's map  
    ✅ Updates an `input_select` helper with all available rooms  
    ✅ Formats each entry as **"Room Name (ID)"** for easy identification  
    ✅ Notifies you if no configured rooms are found  
    
    ## 🔧 How to use it
    1. **Select** your robot's map camera
    2. **Create** a new `input_select` helper (or select an existing one)
    3. **Run** the generated script
    4. **Check** the helper to see all rooms with their IDs
    
    ## 💡 Example result
    ```
    Kitchen (3)
    Living Room (1)
    Bathroom (5)
    Bedroom (2)
    ```
    
    ## 🔗 Next step
    Use the IDs found with the **"🎙️ Alexa: Room Cleaning Scripts"** blueprint to create custom voice commands!
    
  domain: script
  source_url: https://raw.githubusercontent.com/Magnum9O/HA_BluePrints/main/Dreame/ENG/1_CreateRoomHelper.yaml
  input:
    map_camera:
      name: "🗺️ Robot Map"
      description: |
        Select the **camera** entity that contains the `rooms` attribute of your Vacuum Map Card.
        
        💡 **Tip**: Usually named something like `camera.vacuum_map` or similar.
      selector:
        entity:
          domain: camera
    select_entity:
      name: "📝 Room Input Select Helper"
      description: |
        **First create** a new `input_select` helper from Home Assistant settings, then select it here.
        
        🔧 **Where to create it**: 
        - Settings → Devices & Services → Helpers → Create Helper → Dropdown
        - **OR** from the dropdown menu below: **+ Create new helper**
        
        ⚠️ **Important**: The helper will be automatically populated with the rooms found.
      selector:
        entity:
          domain: input_select

sequence:
  # Local variables for map and input select
  - variables:
      map_ent: !input map_camera
      select_ent: !input select_entity
      # Build a list of rooms formatted as "Name (ID)" from the rooms attribute.
      room_options: >-
        {% set ns = namespace(opts=[]) %}
        {% set rooms = state_attr(map_ent, 'rooms') %}
        {% if rooms %}
          {% for pair in rooms | dictsort %}
            {% set key = pair[0] %}
            {% set val = pair[1] %}
            {% set name = (val['name'] if 'name' in val else key) %}
            {% set rid = (val['room_id'] if 'room_id' in val else key) %}
            {% set ns.opts = ns.opts + [name ~ ' (' ~ rid ~ ')'] %}
          {% endfor %}
        {% endif %}
        {{ ns.opts }}
  # Update the input_select with the list, or notify if empty
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ room_options | length > 0 }}"
        sequence:
          - service: input_select.set_options
            data:
              entity_id: "{{ select_ent }}"
              options: "{{ room_options }}"
          - service: persistent_notification.create
            data:
              title: "✅ Room Update Completed"
              message: >-
                **Perfect!** Found {{ room_options | length }} rooms in map {{ map_ent }}.
                
                The rooms have been added to helper **{{ select_ent }}** and are ready to use!
                
                🎙️ **Next step**: Use the "Alexa: Room Cleaning Scripts" blueprint to create voice commands.
      # If no rooms found, send notification
      - conditions: []
        sequence:
          - service: persistent_notification.create
            data:
              title: "⚠️ No Rooms Found"
              message: >-
                **Warning!** No rooms were found in the `rooms` attribute of map {{ map_ent }}.
                
                🔧 **Possible solutions**:
                • Verify that the Tasshack/Dreame integration is configured correctly
                • Make sure the robot has completed at least one full mapping
                • Check that the Vacuum Map Card is configured correctly
                • Try running a full cleaning cycle to update the map
                
                📞 **Need help?** Check the blueprint documentation on GitHub!