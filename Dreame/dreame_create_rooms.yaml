blueprint:
  name: "Dreame: Aggiorna elenco stanze"
  description: |
    Questo blueprint crea uno script che legge l'attributo ``rooms`` della mappa
    tasshack e aggiorna un helper `input_select` con l'elenco delle stanze.

    Ogni voce dell'elenco viene formata concatenando il nome della stanza e il suo
    ``room_id`` fra parentesi, ad esempio ``Cucina (3)``.

    Questo helper ti aiuterÃ  a trovare gli ID delle stazne per la creazione degli script
    da esporre ad Alexa con il blueprint ``ExposeToAlexa``

    Se non vengono trovate stanze nell'attributo ``rooms``, viene generata una notifica.
  domain: script
  source_url: https://raw.githubusercontent.com/Magnum9O/HA_BluePrints/main/blueprints/BP_Dreame_Automation/dreame_update_rooms_replace.yaml
  input:
    map_camera:
      name: "Mappa del robot"
      description: "Seleziona la camera tasshack che contiene l'attributo 'rooms'."
      selector:
        entity:
          domain: camera
    select_entity:
      name: "Input Select per le stanze"
      description: "Seleziona l'helper input_select da aggiornare con i nomi delle stanze."
      selector:
        entity:
          domain: input_select

sequence:
  # Variabili locali per mappa e input select
  - variables:
      map_ent: !input map_camera
      select_ent: !input select_entity
      # Costruisci una lista delle stanze formattate come "Nome (ID)" partendo dall'attributo rooms.
      room_options: >-
        {% set ns = namespace(opts=[]) %}
        {% set rooms = state_attr(map_ent, 'rooms') %}
        {% if rooms %}
          {% for pair in rooms | dictsort %}
            {% set key = pair[0] %}
            {% set val = pair[1] %}
            {% set name = (val['name'] if 'name' in val else key) %}
            {% set rid = (val['room_id'] if 'room_id' in val else key) %}
            {% set ns.opts = ns.opts + [name ~ ' (' ~ rid ~ ')'] %}
          {% endfor %}
        {% endif %}
        {{ ns.opts }}
  # Aggiorna l'input_select con la lista, oppure notifica se vuota
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ room_options | length > 0 }}"
        sequence:
          - service: input_select.set_options
            data:
              entity_id: "{{ select_ent }}"
              options: "{{ room_options }}"
      # Se non ci sono stanze, invia una notifica
      - conditions: []
        sequence:
          - service: persistent_notification.create
            data:
              title: "Aggiornamento stanze"
              message: >-
                Non sono state trovate stanze nell'attributo 'rooms' della mappa {{ map_ent }}.
                Assicurati che l'integrazione tasshack abbia creato la mappa e che il robot abbia
                generato un layout con le stanze.
