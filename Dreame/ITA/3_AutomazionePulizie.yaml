blueprint:
  name: Pulizia programmata Dreame (Semplice o Avanzata, con sensore presenza)
  description: >
    Questo blueprint ti consente di **automatizzare le pulizie del robot Dreame**
    secondo una pianificazione giornaliera o settimanale, con la possibilità di
    includere un **controllo presenza** e un **monitoraggio dello stato di pulizia**.

    **Modalità disponibili:**
    - **Semplice:** imposta due orari di pulizia (mattina e sera).
    - **Avanzata:** fino a **4 orari di pulizia personalizzati** per giorno della settimana.

    Puoi selezionare le stanze da pulire tramite **ID** o **nome** (se configurate nella mappa)
    e scegliere se abilitare un **controllo presenza** per eseguire la pulizia solo quando
    la casa è vuota (utile se usi un sensore o un contatore di presenza).

    **Modalità di pulizia supportate:**
    - *Aspirazione* → solo aspirazione
    - *Lavaggio* → solo lavaggio
    - *Pulizia* → **CleanGenius** (aspirazione + lavaggio)
    - *Pulizia profonda* → **CleanGenius Deep** (pulizia più accurata)

    **Gestione automatica dello stato di pulizia:**
    Il blueprint utilizza un `input_boolean` (es. `input_boolean.cleaned_today`)
    per **tenere traccia** se la casa è già stata pulita nella giornata:
    - Viene **acceso** automaticamente dopo ogni pulizia completata.
    - Viene **resettato a mezzanotte** da un’automazione dedicata.
    
    Questo meccanismo ti aiuta nella programmazione giornaliera: evita doppie pulizie
    nello stesso giorno e consente di **adattare la sessione serale** in base a quella
    mattutina (es. “se hai già lavato la cucina stamattina, salta la sera o esegui
    solo l’aspirazione in cucina”).

  domain: automation
  source_url: https://raw.githubusercontent.com/Magnum9O/HA_BluePrints/main/Dreame/ITA/3_AutomazionePulizie.yaml

  input:

    vacuum_entity:
      name: Robot Dreame
      description: Seleziona il tuo aspirapolvere Dreame (es. `vacuum.ambrogio`).
      selector:
        entity:
          domain: vacuum

    map_camera:
      name: Mappa
      description: >
        Seleziona la camera che espone l’attributo `rooms` (es. `camera.TuoRobot_map`)
        generata con la **Vacuum Map card**. Obbligatoria.
      selector:
        entity:
          domain: camera

    cleaned_today_helper:
      name: Flag "Pulizia effettuata"
      description: Booleano che si accende dopo la pulizia e viene resettato ogni giorno all’orario scelto.
      selector:
        entity:
          domain: input_boolean

    reset_time:
      name: Orario reset giornaliero
      description: Orario in cui spegnere il flag “Pulizia effettuata”.
      default: "23:59:00"
      selector:
        time: {}

    presence_helper:
      name: Helper presenza (opzionale)
      description: >
        Entità per il controllo presenza. Se impostata, l’automazione parte solo quando il suo
        valore corrisponde a **Valore presenza richiesto**.
      default: ""
      selector:
        entity: {}

    presence_required_value:
      name: Valore presenza richiesto (opzionale)
      description: Esempi: `1`, `home`, `on`. Se vuoto, la presenza viene ignorata.
      default: ""

    simple_mode_enabled:
      name: Abilita modalità semplice (mattina/sera)
      default: true
      selector:
        boolean: {}

    morning_enabled:
      name: Attiva schedulazione mattina
      default: false
      selector:
        boolean: {}

    morning_time:
      name: Orario pulizia mattina
      default: "08:30:00"
      selector:
        time: {}

    morning_days:
      name: Giorni mattina
      description: Giorni della settimana (lascia vuoto per tutti i giorni).
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    morning_preset:
      name: Modalità mattina
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    morning_rooms:
      name: Stanze mattina
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

    evening_enabled:
      name: Attiva schedulazione sera
      default: false
      selector:
        boolean: {}

    evening_time:
      name: Orario pulizia sera
      default: "18:00:00"
      selector:
        time: {}

    evening_days:
      name: Giorni sera
      description: Giorni della settimana (lascia vuoto per tutti i giorni).
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    evening_preset:
      name: Modalità sera
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    evening_rooms:
      name: Stanze sera
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

    blockA_enabled:
      name: Abilita blocco A
      default: false
      selector:
        boolean: {}

    blockA_time:
      name: Orario blocco A
      default: "09:00:00"
      selector:
        time: {}

    blockA_days:
      name: Giorni blocco A
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockA_preset:
      name: Modalità blocco A
      default: sweeping
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockA_rooms:
      name: Stanze blocco A
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

    blockB_enabled:
      name: Abilita blocco B
      default: false
      selector:
        boolean: {}

    blockB_time:
      name: Orario blocco B
      default: "12:00:00"
      selector:
        time: {}

    blockB_days:
      name: Giorni blocco B
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockB_preset:
      name: Modalità blocco B
      default: mopping
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockB_rooms:
      name: Stanze blocco B
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

    blockC_enabled:
      name: Abilita blocco C
      default: false
      selector:
        boolean: {}

    blockC_time:
      name: Orario blocco C
      default: "16:00:00"
      selector:
        time: {}

    blockC_days:
      name: Giorni blocco C
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockC_preset:
      name: Modalità blocco C
      default: genius
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockC_rooms:
      name: Stanze blocco C
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

    blockD_enabled:
      name: Abilita blocco D
      default: false
      selector:
        boolean: {}

    blockD_time:
      name: Orario blocco D
      default: "20:00:00"
      selector:
        time: {}

    blockD_days:
      name: Giorni blocco D
      default: []
      selector:
        select:
          options: [mon, tue, wed, thu, fri, sat, sun]
          multiple: true
          sort: false

    blockD_preset:
      name: Modalità blocco D
      default: genius_deep
      selector:
        select:
          options:
            - label: "Solo aspirazione"
              value: sweeping
            - label: "Solo lavaggio"
              value: mopping
            - label: "Aspirazione e lavaggio"
              value: sweeping_and_mopping
            - label: "Lavaggio dopo aspirazione"
              value: mopping_after_sweeping
            - label: "CleanGenius"
              value: genius
            - label: "CleanGenius Profondo"
              value: genius_deep
          multiple: false
          custom_value: false

    blockD_rooms:
      name: Stanze blocco D
      description: Esempi: `"2,3,4"` oppure `"Kitchen,Bathroom"`. Se vuoto → **tutta la casa**.
      default: ""

mode: single
max_exceeded: silent

variables:
  vac: !input vacuum_entity
  map_ent: !input map_camera
  presence_ent: !input presence_helper
  pres_val: !input presence_required_value
  flag_cleaned: !input cleaned_today_helper

  simp_on: !input simple_mode_enabled

  m_on: !input morning_enabled
  m_time: !input morning_time
  m_days: !input morning_days
  m_preset: !input morning_preset
  m_rooms: !input morning_rooms

  e_on: !input evening_enabled
  e_time: !input evening_time
  e_days: !input evening_days
  e_preset: !input evening_preset
  e_rooms: !input evening_rooms

  adv_on: !input advanced_mode_enabled

  a_on: !input blockA_enabled
  a_time: !input blockA_time
  a_days: !input blockA_days
  a_preset: !input blockA_preset
  a_rooms: !input blockA_rooms

  b_on: !input blockB_enabled
  b_time: !input blockB_time
  b_days: !input blockB_days
  b_preset: !input blockB_preset
  b_rooms: !input blockB_rooms

  c_on: !input blockC_enabled
  c_time: !input blockC_time
  c_days: !input blockC_days
  c_preset: !input blockC_preset
  c_rooms: !input blockC_rooms

  d_on: !input blockD_enabled
  d_time: !input blockD_time
  d_days: !input blockD_days
  d_preset: !input blockD_preset
  d_rooms: !input blockD_rooms

  reset_at: !input reset_time

trigger:
  - id: reset
    platform: time
    at: "{{ reset_at }}"

  - id: morning
    platform: time
    at: "{{ m_time }}"
  - id: evening
    platform: time
    at: "{{ e_time }}"

  - id: blockA
    platform: time
    at: "{{ a_time }}"
  - id: blockB
    platform: time
    at: "{{ b_time }}"
  - id: blockC
    platform: time
    at: "{{ c_time }}"
  - id: blockD
    platform: time
    at: "{{ d_time }}"

condition: []

action:
  - choose:

      - conditions: "{{ trigger.id == 'reset' }}"
        sequence:
          - service: input_boolean.turn_off
            target:
              entity_id: "{{ flag_cleaned }}"

      - conditions: >
          {{ trigger.id == 'morning'
             and simp_on and m_on
             and (m_days | count == 0 or now().isoweekday() in
                  [1 if 'mon' in m_days else 0,
                   2 if 'tue' in m_days else 0,
                   3 if 'wed' in m_days else 0,
                   4 if 'thu' in m_days else 0,
                   5 if 'fri' in m_days else 0,
                   6 if 'sat' in m_days else 0,
                   7 if 'sun' in m_days else 0]) }}
        sequence:
          - choose:
              - conditions: >
                  {{ presence_ent != '' and pres_val != '' and states(presence_ent) != pres_val }}
                sequence: []
            default:
              - variables:
                  preset_now: "{{ m_preset }}"
                  rooms_now: "{{ m_rooms }}"
              - sequence: &run_clean
                - variables:
                    seg_list: >-
                      {% set rooms = state_attr(map_ent, 'rooms') %}
                      {% set ns = namespace(map={}, segs=[]) %}
                      {% if rooms %}
                        {% for pair in rooms | dictsort %}
                          {% set rid = pair[1]['room_id'] %}
                          {% set name = pair[1]['name'] %}
                          {% set ns.map = ns.map | combine({ (name): rid }) %}
                          {% set ns.map = ns.map | combine({ (name | lower): rid }) %}
                        {% endfor %}
                      {% endif %}
                      {% set txt = (rooms_now | string).strip() %}
                      {% if txt == '' %}
                        []
                      {% else %}
                        {% set tokens = txt.split(',') %}
                        {% for t in tokens %}
                          {% set k = t | trim %}
                          {% set rid = ns.map[k] if k in ns.map
                                        else (ns.map[k|lower] if k|lower in ns.map
                                        else (k | int(0))) %}
                          {% if rid is number and rid > 0 %}
                            {% set ns.segs = ns.segs + [rid] %}
                          {% endif %}
                        {% endfor %}
                        {{ ns.segs }}
                      {% endif %}
                - service: script.turn_on
                  data:
                    entity_id: script.pulisci_stanza
                    variables:
                      segment_id: "{{ seg_list if seg_list|count > 0 else [] }}"
                      tipo_pulizia: "{{ preset_now }}"
                - service: input_boolean.turn_on
                  target:
                    entity_id: "{{ flag_cleaned }}"

      - conditions: >
          {{ trigger.id == 'evening'
             and simp_on and e_on
             and (e_days | count == 0 or now().isoweekday() in
                  [1 if 'mon' in e_days else 0,
                   2 if 'tue' in e_days else 0,
                   3 if 'wed' in e_days else 0,
                   4 if 'thu' in e_days else 0,
                   5 if 'fri' in e_days else 0,
                   6 if 'sat' in e_days else 0,
                   7 if 'sun' in e_days else 0]) }}
        sequence:
          - choose:
              - conditions: >
                  {{ presence_ent != '' and pres_val != '' and states(presence_ent) != pres_val }}
                sequence: []
            default:
              - variables:
                  preset_now: "{{ e_preset }}"
                  rooms_now: "{{ e_rooms }}"
              - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockA' and adv_on and a_on and (a_days | count == 0 or now().isoweekday() in [1 if 'mon' in a_days else 0,2 if 'tue' in a_days else 0,3 if 'wed' in a_days else 0,4 if 'thu' in a_days else 0,5 if 'fri' in a_days else 0,6 if 'sat' in a_days else 0,7 if 'sun' in a_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ a_preset }}", rooms_now: "{{ a_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockB' and adv_on and b_on and (b_days | count == 0 or now().isoweekday() in [1 if 'mon' in b_days else 0,2 if 'tue' in b_days else 0,3 if 'wed' in b_days else 0,4 if 'thu' in b_days else 0,5 if 'fri' in b_days else 0,6 if 'sat' in b_days else 0,7 if 'sun' in b_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ b_preset }}", rooms_now: "{{ b_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockC' and adv_on and c_on and (c_days | count == 0 or now().isoweekday() in [1 if 'mon' in c_days else 0,2 if 'tue' in c_days else 0,3 if 'wed' in c_days else 0,4 if 'thu' in c_days else 0,5 if 'fri' in c_days else 0,6 if 'sat' in c_days else 0,7 if 'sun' in c_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ c_preset }}", rooms_now: "{{ c_rooms }}" }
          - sequence: *run_clean

      - conditions: "{{ trigger.id == 'blockD' and adv_on and d_on and (d_days | count == 0 or now().isoweekday() in [1 if 'mon' in d_days else 0,2 if 'tue' in d_days else 0,3 if 'wed' in d_days else 0,4 if 'thu' in d_days else 0,5 if 'fri' in d_days else 0,6 if 'sat' in d_days else 0,7 if 'sun' in d_days else 0]) }}"
        sequence:
          - variables: { preset_now: "{{ d_preset }}", rooms_now: "{{ d_rooms }}" }
          - sequence: *run_clean
