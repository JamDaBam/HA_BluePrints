blueprint:
  name: "Creazione script Dreame da esporre ad Alexa"
  description: |
    Genera uno script per avviare la pulizia di **una stanza specifica** del robot Dreame,
    pronto per essere esposto ad Alexa. L'``ID`` stanza viene fissato al momento della creazione,
    così puoi clonare lo script per ogni stanza/preset.
    Per aiutarti nella mpappatura ``stanza/ID``, utilizza il BluePrint #1 (``dreame_create_room``),
    e scorri l'helper per vedere gli ``ID`` delle stanze.

    ``NOTA: le modalità **pulizia** e **pulizia profonda** attivano la modalità clean genius e clean genius profonda, che aspirano e lavano contemporanemente``

    Successivamente, puoi esporre lo script creato ad Alexa tramite Nabu, Lambda o Matter
    ``Se usi matter, assegna subito un label esposto a matter allo script!``

    Comandi vocali per richiamare gli script da Alexa:
    - "avvia ``<nome script>``"
    - "apri ``<nome script>``"

    ``Esempio:`` Creo il primo script in cui definisco l'aspirazione del bagno. Gli dò un nome sensato, come "aspirazione bagno".
    In questo modo ad Alexa basterà dire: ``AVVIA`` aspirazione bagno, e verrà fatta una chiamata allo script appena generato.
    Qualora voglia aggiungere anche un'altra modalità di pulizia, come ad esempio il solo lavaggio, basterà clonare lo script appena creato, tenere l'ID della stanza (in questo caso del bagno),
    e cambiare la modalità da aspirazione -> lavaggio.
    Rinominio lo script clonato, e lo chiamerò ``lavaggio bagno``.
    Ora potrò dire ad Alexa: ``AVVIA`` lavaggio bagno, e si attiverà lo script appena creato.
    

  domain: script
  source_url: https://raw.githubusercontent.com/Magnum9O/HA_BluePrints/main/Dreame/ITA/2_EsponiAdAlexa.yaml

  input:
    vacuum_entity:
      name: Robot Dreame
      description: Seleziona il tuo vacuum (es. vacuum.ambrogio)
      selector:
        entity:
          domain: vacuum

    cleangenius_select:
      name: Seleziona l'entity corretta per CleanGenius
      description: Selettore modalità CleanGenius (es. select.NomeRobot_cleangenius)
      selector:
        entity:
          domain: select

    cleaning_mode_select:
      name: Seleziona l'entity corretta per il Cleaning Mode
      description: Selettore cleaning mode “segment” (es. select.NomeRobot_cleaning_mode)
      selector:
        entity:
          domain: select

    room_id:
      name: ID stanza (numero)
      description: >
        Copia l'ID tra parentesi dal tuo helper “Nome (ID)”. Esempio: "Kitchen (3)" → inserisci **3**.
      selector:
        number:
          min: 0
          mode: box
      default: 0

    cleaning_preset:
      name: Tipo di pulizia
      description: Scegli il preset. “Pulizia/Pulizia profonda” usano CleanGenius; “Aspirazione/Lavaggio” usano cleaning_mode con CleanGenius OFF.
      selector:
        select:
          options:
            - Aspirazione
            - Lavaggio
            - Pulizia
            - Pulizia profonda
      default: Pulizia

icon: mdi:robot-vacuum

mode: single

sequence:
  - variables:
      _vac: !input vacuum_entity
      _cg_sel: !input cleangenius_select
      _cm_sel: !input cleaning_mode_select
      _rid: !input room_id
      _preset_raw: !input cleaning_preset
      preset: "{{ (_preset_raw or 'Pulizia') | lower }}"

  # Validazione ID stanza
  - condition: template
    value_template: "{{ (_rid | int(default=-1)) >= 0 }}"

  # Branch in base al preset
  - choose:
      # PULIZIA PROFONDA → CleanGenius deep_cleaning
      - conditions:
          - condition: template
            value_template: "{{ preset == 'pulizia profonda' }}"
        sequence:
          - service: select.select_option
            target:
              entity_id: "{{ _cg_sel }}"
            data:
              option: deep_cleaning

          - wait_template: >-
              {{ states(_cg_sel) in ['deep_cleaning','unknown','unavailable','none'] }}
            timeout: "00:00:10"

          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segments:
                - "{{ _rid | int }}"

      # PULIZIA (standard) → CleanGenius lasciato com'è (nessun cambio), poi avvio
      - conditions:
          - condition: template
            value_template: "{{ preset == 'pulizia' }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segments:
                - "{{ _rid | int }}"

      # ASPIRAZIONE → CleanGenius OFF → cleaning_mode sweeping → avvio
      - conditions:
          - condition: template
            value_template: "{{ preset == 'aspirazione' }}"
        sequence:
          - service: select.select_option
            target:
              entity_id: "{{ _cg_sel }}"
            data:
              option: 'off'

          - wait_template: >-
              {{ states(_cg_sel) in ['off','unknown','unavailable','none'] }}
            timeout: "00:00:10"

          - service: select.select_option
            target:
              entity_id: "{{ _cm_sel }}"
            data:
              option: sweeping

          - delay: "00:00:01"

          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segments:
                - "{{ _rid | int }}"

      # LAVAGGIO → CleanGenius OFF → cleaning_mode mopping → avvio
      - conditions:
          - condition: template
            value_template: "{{ preset == 'lavaggio' }}"
        sequence:
          - service: select.select_option
            target:
              entity_id: "{{ _cg_sel }}"
            data:
              option: 'off'

          - wait_template: >-
              {{ states(_cg_sel) in ['off','unknown','unavailable','none'] }}
            timeout: "00:00:10"

          - service: select.select_option
            target:
              entity_id: "{{ _cm_sel }}"
            data:
              option: mopping

          - delay: "00:00:01"

          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segments:
                - "{{ _rid | int }}"

    default: []
