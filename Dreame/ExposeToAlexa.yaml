blueprint:
  name: Espone gli script di pulizia a Alexa (Dreame + Vacuum Map)
  description: |
    Crea uno script eseguibile da Alexa per avviare la pulizia di una stanza del robot Dreame.
    Requisiti:
    - Integrazione Dreame funzionante.
    - Vacuum Map card (tasshack) che popola l’helper con opzioni tipo "Nome (ID)".
    - Un input_select (già popolato dal primo blueprint) con le stanze in formato "Nome (ID)".
    Uso con Alexa: dire "avvia <nome script>" oppure "apri <nome script>".

  domain: script

  input:
    vacuum_entity:
      name: Entità robot Dreame
      description: Seleziona l'entità del robot aspirapolvere Dreame.
      selector:
        entity:
          domain: vacuum

    room_helper:
      name: Helper stanze (input_select)
      description: >
        Seleziona l'input_select già popolato con le stanze in formato "Nome (ID)".
      selector:
        entity:
          domain: input_select

    suction_level:
      name: Livello aspirazione (opzionale)
      description: Lascia vuoto per usare il valore predefinito del robot.
      default: !input default_suction_placeholder
      selector:
        number:
          min: 1
          max: 4
          mode: slider
          step: 1
          unit_of_measurement: ""

    water_volume:
      name: Livello acqua (opzionale)
      description: Lascia vuoto per usare il valore predefinito del robot (solo modelli che lavano).
      default: !input default_water_placeholder
      selector:
        number:
          min: 1
          max: 3
          mode: slider
          step: 1
          unit_of_measurement: ""

    cleaning_passes:
      name: Passate (opzionale)
      description: Numero di passate su stanza. Lascia vuoto per default.
      default: !input default_passes_placeholder
      selector:
        number:
          min: 1
          max: 3
          mode: slider
          step: 1
          unit_of_measurement: ""

# Placeholders vuoti per distinguere "non impostato" da 0
default_suction_placeholder: null
default_water_placeholder: null
default_passes_placeholder: null

mode: restart
icon: mdi:robot-vacuum

sequence:
  - variables:
      _helper: !input room_helper
      _vac: !input vacuum_entity
      _suction: !input suction_level
      _water: !input water_volume
      _passes: !input cleaning_passes

      # Testo selezionato nell'input_select, es. "Kitchen (3)"
      room_label: "{{ states(_helper) | string }}"
      # Estrai ID (tra parentesi) e Nome (prima della parentesi)
      room_id: >-
        {% set s = room_label %}
        {% if '(' in s and ')' in s %}
          {{ s.split('(')[-1].split(')')[0] | int }}
        {% else %}
          {{ 0 }}
        {% endif %}
      room_name: >-
        {% set s = room_label %}
        {% if ' (' in s %}
          {{ s.rsplit(' (', 1)[0] }}
        {% else %}
          {{ s }}
        {% endif %}

  - choose:
      # Suction + water + passes tutti presenti
      - conditions:
          - condition: template
            value_template: "{{ _suction is number }}"
          - condition: template
            value_template: "{{ _water is number }}"
          - condition: template
            value_template: "{{ _passes is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              suction_level: "{{ _suction | int }}"
              water_volume: "{{ _water | int }}"
              cleaning_times: "{{ _passes | int }}"

      # Solo suction + passes
      - conditions:
          - condition: template
            value_template: "{{ _suction is number }}"
          - condition: template
            value_template: "{{ _passes is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              suction_level: "{{ _suction | int }}"
              cleaning_times: "{{ _passes | int }}"

      # Solo water + passes
      - conditions:
          - condition: template
            value_template: "{{ _water is number }}"
          - condition: template
            value_template: "{{ _passes is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              water_volume: "{{ _water | int }}"
              cleaning_times: "{{ _passes | int }}"

      # Solo passes
      - conditions:
          - condition: template
            value_template: "{{ _passes is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              cleaning_times: "{{ _passes | int }}"

      # Solo suction
      - conditions:
          - condition: template
            value_template: "{{ _suction is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              suction_level: "{{ _suction | int }}"

      # Solo water
      - conditions:
          - condition: template
            value_template: "{{ _water is number }}"
        sequence:
          - service: dreame_vacuum.vacuum_clean_segment
            target:
              entity_id: "{{ _vac }}"
            data:
              segment_ids: ["{{ room_id }}"]
              water_volume: "{{ _water | int }}"

    default:
      - service: dreame_vacuum.vacuum_clean_segment
        target:
          entity_id: "{{ _vac }}"
        data:
          segment_ids: ["{{ room_id }}"]
